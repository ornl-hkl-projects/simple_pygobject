Attempt at creating a simple use of PyGObject to a custom package (not, for instance, gtk). This is for basic understanding of the python bindings used in hkl.

PyGObjects are bindings for GNOME apps such as gtk. I believe all gnome apps are related to their gui's. It might be simpler to compile --disable-gui within EPICS initially

assuming conda env for now

conda env create -n simple_pygobject python=3.8
conda activate simple_pygobject
conda install -c conda-forge pygobject
^ not working, trying pip
(did not try pip)


without conda:
import gi works


```bash
conda deactivate
python
```
Python 2.7.18 (default, Jan 31 2024, 16:23:13)
[GCC 9.4.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import gi
>>>
>>> from gi.repository import Hkl
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/lib/python2.7/dist-packages/gi/importer.py", line 133, in load_module
    'introspection typelib not found' % namespace)
ImportError: cannot import name Hkl, introspection typelib not found
>>> from gi.repository import GObject
>>>

>>> print(GObject)
<GObjectProxyModule <IntrospectionModule 'GObject' from '/usr/lib/x86_64-linux-gnu/girepository-1.0/GObject-2.0.typelib'>>


configured hkl with --enable-introspection, compiled
some .so files placed in /usr/local/lib
need to find a way to find these files with gi
probably need to specify a path somewhere

similar issues related to correct linking mentioned here
https://aravis-project.discourse.group/t/introspection-error-after-install/132
https://github.com/SintefManufacturing/python-aravis/issues/4
"typelib" for hkl can be found in 
/usr/local/lib/girepository-1.0/Hkl-5.0.typelib

should try 
sudo ln -s /usr/local/lib/girepository-1.0/Hkl-5.0.typelib  /usr/local/lib/python2.7/dist-packages/
tried 
sudo ln -s /usr/local/lib/girepository-1.0/Hkl-5.0.typelib /usr/local/lib/python2.7/dist-packages/

got same error, cannot import Hkl through gi.repository

trying 
sudo ln -s /usr/local/lib/girepository-1.0/Hkl-5.0.typelib /usr/lib/i386-linux-gnu/girepository-1.0/

that didn't work either, still cannot import Hkl through gi.repository

one more try with linking
sudo ln -s /usr/local/lib/girepository-1.0/Hkl.5.0.typelib /usr/lib/girepository-1.0/

still no good
Maybe specify lib location when compiling hkl?




Another way, using ctypes instead of gi:

>>> lib_hkl = cdll.LoadLibrary("/usr/local/lib/libhkl.so")
>>> print(lib_hkl.__doc__)
An instance of this class represents a loaded dll/shared
    library, exporting functions using the standard C calling
    convention (named 'cdecl' on Windows).

    The exported functions can be accessed as attributes, or by
    indexing with the function name.  Examples:

    <obj>.qsort -> callable object
    <obj>['qsort'] -> callable object

    Calling the functions releases the Python GIL during the call and
    reacquires it afterwards.

difficult to tell what the functions are within the hkl object, or if I selected the right hkl shared library (there are a few, see HKL_additional notes)


